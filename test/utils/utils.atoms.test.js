describe('Atoms', () => {
  const atomArray = [
    'block',
    'div',
    'header',
    'footer',
    'aside',
    'article',
    'main',
    'nav',
    'navigation',
    'span',
    'text',
    'p',
    'paragraphe',
    'ulist-container',
    'ulist',
    'ul',
    'unordered-list',
    'olist-container',
    'olist',
    'ol',
    'ordered-list',
    'list-element',
    'li',
    'code',
    'pre',
    'input',
    'textarea',
    'form',
    'image',
    'img',
    'button',
    'iframe',
    'video',
    'canvas',
    'audio',
  ];
  const refObject = {
    block: 'div',
    div: 'div',
    header: 'header',
    footer: 'footer',
    aside: 'aside',
    article: 'article',
    main: 'main',
    nav: 'nav',
    navigation: 'nav',
    span: 'span',
    text: 'p',
    p: 'p',
    paragraphe: 'p',
    'ulist-container': 'ul',
    ulist: 'ul',
    ul: 'ul',
    'unordered-list': 'ul',
    'olist-container': 'ol',
    olist: 'ol',
    ol: 'ol',
    'ordered-list': 'ol',
    'list-element': 'li',
    li: 'li',
    code: 'pre',
    pre: 'pre',
    input: 'input',
    textarea: 'textarea',
    form: 'form',
    image: 'img',
    img: 'img',
    button: 'button',
    iframe: 'iframe',
    video: 'video',
    canvas: 'canvas',
    audio: 'audio',
  };

  for (let x = 0; x < atomArray.length; x++) {
    it(`should return ${refObject[atomArray[x]]} for input ${atomArray[x]}`, () => {
      expect(Atoms(atomArray[x]))
      .toEqual(refObject[atomArray[x]]);
    });
  }
});
